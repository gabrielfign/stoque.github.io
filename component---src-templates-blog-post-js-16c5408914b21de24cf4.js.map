{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/components/post.js","webpack:///./src/templates/blog-post.js"],"names":["List","styled","ul","Item","li","StyledLink","Link","p","theme","mainColor","Pagination","previous","next","to","fields","slug","rel","frontmatter","title","PostWrapper","div","TitleWrapper","Title","h1","Date","Content","textColor","Post","post","date","dangerouslySetInnerHTML","__html","html","BlogPostTemplate","data","pageContext","location","markdownRemark","siteTitle","site","siteMetadata","description","excerpt","pageQuery"],"mappings":"2KAuBMA,EAAOC,IAAOC,GAAV,uEAAGD,CAAH,wDAMJE,EAAOF,IAAOG,GAAV,uEAAGH,CAAH,oCAKJI,EAAaJ,YAAOK,KAAV,6EAAGL,CAAH,iJACM,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,aACxB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,aAMN,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,aAKhBC,EA3CI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACjB,kBAACZ,EAAD,KACE,kBAACG,EAAD,KACGQ,GACC,kBAACN,EAAD,CAAYQ,GAAIF,EAASG,OAAOC,KAAMC,IAAI,QAA1C,KACKL,EAASM,YAAYC,QAI9B,kBAACf,EAAD,KACGS,GACC,kBAACP,EAAD,CAAYQ,GAAID,EAAKE,OAAOC,KAAMC,IAAI,QACnCJ,EAAKK,YAAYC,MADpB,SCCFC,EAAclB,IAAOmB,IAAV,oEAAGnB,CAAH,MAEXoB,EAAepB,IAAOmB,IAAV,qEAAGnB,CAAH,oFACF,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,aAOvBa,EAAQrB,IAAOsB,GAAV,8DAAGtB,CAAH,qBAILuB,EAAOvB,IAAOM,EAAV,6DAAGN,CAAH,qBAIJwB,EAAUxB,IAAOmB,IAAV,gEAAGnB,CAAH,0fAEF,SAAAM,GAAC,OAAIA,EAAEC,MAAMkB,aA+DX,SAAAnB,GAAC,OAAIA,EAAEC,MAAMC,aAQXkB,EAxGF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,kBAACT,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KAAQM,EAAKX,YAAYC,OACzB,kBAAC,EAAD,KACGU,EAAKX,YAAYY,OAItB,kBAACJ,EAAD,CAASK,wBAAyB,CAAEC,OAAQH,EAAKI,UCZrD,0CA4BeC,UAnBU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCR,EAAOM,EAAKG,eACZC,EAAYJ,EAAKK,KAAKC,aAAatB,MACjCP,EAAmBwB,EAAnBxB,SAAUC,EAASuB,EAATvB,KAElB,OACE,kBAAC,IAAD,CAAQwB,SAAUA,EAAUlB,MAAOoB,GACjC,kBAAC,IAAD,CAAKpB,MAAOU,EAAKX,YAAYC,MAAOuB,YAAab,EAAKc,UAEtD,kBAAC,EAAD,CAAMd,KAAMA,IAEZ,kBAAC,EAAD,CACEjB,SAAUA,EACVC,KAAMA,MAbd,IAqBa+B,EAAS","file":"component---src-templates-blog-post-js-16c5408914b21de24cf4.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst Pagination = ({ previous, next }) => (\n  <List>\n    <Item>\n      {previous && (\n        <StyledLink to={previous.fields.slug} rel=\"prev\">\n          ← {previous.frontmatter.title}\n        </StyledLink>\n      )}\n    </Item>\n    <Item>\n      {next && (\n        <StyledLink to={next.fields.slug} rel=\"next\">\n          {next.frontmatter.title} →\n        </StyledLink>\n      )}\n    </Item>\n  </List>\n)\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin: 40px 0;\n`\n\nconst Item = styled.li`\n  list-style: none;\n  margin: 0 20px;\n`\n\nconst StyledLink = styled(Link)`\n  border: 2px solid ${p => p.theme.mainColor};\n  color: ${p => p.theme.mainColor};\n  padding: 10px 20px;\n  text-decoration: none;\n  transition: background 0.2s linear;\n\n  &:hover {\n    background: ${p => p.theme.mainColor};\n    color: #fff;\n  }\n`\n\nexport default Pagination","import React from 'react'\nimport styled from 'styled-components'\n\nconst Post = ({ post }) => (\n  <PostWrapper>\n    <TitleWrapper>\n      <Title>{post.frontmatter.title}</Title>\n      <Date>\n        {post.frontmatter.date}\n      </Date>\n    </TitleWrapper>\n  \n    <Content dangerouslySetInnerHTML={{ __html: post.html }} />\n  </PostWrapper>\n)\n\nconst PostWrapper = styled.div``\n\nconst TitleWrapper = styled.div`\n  background: ${p => p.theme.mainColor};\n  color: #fff;\n  margin: 20px 0 40px 0;\n  padding: 50px;\n  text-align: center;\n`\n\nconst Title = styled.h1`\n  font-size: 45px;\n`\n\nconst Date = styled.p`\n  font-size: 14px;\n`\n\nconst Content = styled.div`\n  padding: 0 20px;\n  color: ${p => p.theme.textColor};\n  max-width: 740px;\n  margin: 0 auto;\n\n  > h2,\n  > h3,\n  > h4,\n  > h5,\n  > h6 {\n    margin: 28px 0 0;\n  }\n\n  > h2 {\n    font-size: 30px;\n  }\n\n  > h3 {\n    font-size: 26px;\n  }\n\n  > h4 {\n    font-size: 23px;\n  }\n\n  > h5 {\n    font-size: 20px;\n  }\n\n  > h6 {\n    font-size: 18px;\n  }\n\n  > p {\n    font-size: 16px;\n    line-height: 1.58;\n    margin: 20px 0 0;\n\n    &:first-child:first-letter {\n      font-size: 30px;\n      font-weight: bold;\n    }\n  }\n\n  > ul,\n  > ol {\n    margin: 12px 0 0;\n\n    > li {\n      margin: 0 0 0 40px;\n\n      > ul {\n        margin: 0 0 0 40px;\n      }\n    }\n  }\n\n  blockquote {\n    margin: 50px 0 50px 0;\n    padding: 0 0 0 50px;\n    font-size: 20px;\n  }\n\n  a {\n    color: ${p => p.theme.mainColor};\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nexport default Post","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport Pagination from '../components/pagination'\r\nimport Post from '../components/post'\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const { previous, next } = pageContext\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\r\n\r\n      <Post post={post}/>\r\n  \r\n      <Pagination \r\n        previous={previous}\r\n        next={next}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}